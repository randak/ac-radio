{"version":3,"sources":["components/HourSelect/HourSelect.module.css","components/PlayBar/PlayBar.module.css","components/Player/Player.module.css","components/Picker/Picker.module.css","utils/hourly.ts","components/ModePicker/ModePicker.tsx","components/HourSelect/HourSelect.tsx","components/Picker/Picker.tsx","components/Picker/Option.tsx","components/MusicPicker/MusicPicker.tsx","components/PlayButton/PlayButton.tsx","components/PlayBar/PlayBar.tsx","components/Player/Player.tsx","containers/Main/Main.tsx","serviceWorker.ts","index.tsx","components/PlayButton/PlayButton.module.css","containers/Main/Main.module.css"],"names":["module","exports","VideoSet","acnhVideoIds","Mode","videoIds","NewHorizons","NewLeaf","CityFolk","hours","Object","keys","HourSelect","onChange","value","disabled","className","classes","select","map","time","key","Picker","children","picker","Option","checked","label","cx","option","selected","radio","type","name","ModePicker","setValue","event","target","realtime","choose","MusicPicker","PlayButton","onClick","paused","button","aria-label","icon","focusable","viewBox","aria-hidden","d","PlayBar","hour","mode","onPlayClick","setHour","playbar","Player","videoId","appPaused","playerPaused","setPlayerPaused","useState","video","setVideo","useEffect","pauseVideo","playVideo","player","onReady","onEnd","onStateChange","data","YouTube","PlayerState","UNSTARTED","PAUSED","PLAYING","useHourState","createPersistedState","useModeState","useVideoSetState","Main","setAppPaused","setMode","videoSet","setVideoSet","setRealtimeHour","Date","toLocaleString","hour12","intervalId","setInterval","clearInterval","title","controls","main","prev","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.427d6f79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"HourSelect_select__1SHPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbar\":\"PlayBar_playbar__jO2Cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__2p7ty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"Picker_picker__27kv-\",\"option\":\"Picker_option__2nM76\",\"selected\":\"Picker_selected__l7Mwz\",\"radio\":\"Picker_radio__2G958\"};","export type HourType = '6 AM'\n | '7 AM'\n | '8 AM'\n | '9 AM'\n | '10 AM'\n | '11 AM'\n | '12 PM'\n | '1 PM'\n | '2 PM'\n | '3 PM'\n | '4 PM'\n | '5 PM'\n | '6 PM'\n | '7 PM'\n | '8 PM'\n | '9 PM'\n | '10 PM'\n | '11 PM'\n | '12 AM'\n | '1 AM'\n | '2 AM'\n | '3 AM'\n | '4 AM'\n | '5 AM'\n\n\ntype VideoIdRecord = {\n  '6 AM': string\n  '7 AM': string\n  '8 AM': string\n  '9 AM': string\n  '10 AM': string\n  '11 AM': string\n  '12 PM': string\n  '1 PM': string\n  '2 PM': string\n  '3 PM': string\n  '4 PM': string\n  '5 PM': string\n  '6 PM': string\n  '7 PM': string\n  '8 PM': string\n  '9 PM': string\n  '10 PM': string\n  '11 PM': string\n  '12 AM': string\n  '1 AM': string\n  '2 AM': string\n  '3 AM': string\n  '4 AM': string\n  '5 AM': string\n}\n\nconst acnhVideoIds: VideoIdRecord = {\n  '6 AM': 'FqUlCT47ucE',\n  '7 AM': 'y6dF4h5z0ik',\n  '8 AM': 'YhpYzNZkg8E',\n  '9 AM': 'rw-NhaaC8bU',\n  '10 AM': 'mnC8Yj7GUBk',\n  '11 AM': 'bnzSJMLDm90',\n  '12 PM': 'FuMClV20DDg',\n  '1 PM': 'cTMHpVXBWVo',\n  '2 PM': 'ALRRqnJdAhc',\n  '3 PM': 'Lu7h28H52jM',\n  '4 PM': 'jHs6hIDmOFE',\n  '5 PM': 'pJvjbosEdHE',\n  '6 PM': 'lxgcDP-wppM',\n  '7 PM': 'ZMgj30uGeb0',\n  '8 PM': '9n-LArbDkIk',\n  '9 PM': 'QEkytL-anQw',\n  '10 PM': 'GFBWicff5ZE',\n  '11 PM': 'HT-djWRbNN4',\n  '12 AM': 'lqs34Ou0Rw8',\n  '1 AM': 'LJhvOKQZqC0',\n  '2 AM': 'bgdqH77h4qU',\n  '3 AM': 'C1cfkkscrI8',\n  '4 AM': 'GnLPAiLYmKw',\n  '5 AM': 'dJwg-mWj7xY',\n}\n\nconst acnlVideoIds: VideoIdRecord = {\n  '6 AM': 'mWa-tiP3a_o',\n  '7 AM': '-CtfRww-2YM',\n  '8 AM': 'OHxpIqpAjz0',\n  '9 AM': 'T9ieUkNOEf4',\n  '10 AM': '25wXOGbmWOc',\n  '11 AM': 'TPFZhtkP7M0',\n  '12 PM': 'vZVS2FtVWHA',\n  '1 PM': 'G3rtW1G2Ixg',\n  '2 PM': 'LiXoQXCFhF8',\n  '3 PM': 'CM58GBw4JkE',\n  '4 PM': 'wqaKOCbeXmY',\n  '5 PM': 'HXG9zU2Lb6g',\n  '6 PM': 'iLSwc8wgJeo',\n  '7 PM': 'rmtKHo7GB64',\n  '8 PM': 'DhrsQO9Pkbs',\n  '9 PM': 'Fl4M-a3eBnw',\n  '10 PM': 'tEWFq1_NVSg',\n  '11 PM': 'ytHqYVbuLt4',\n  '12 AM': 'A_00O4KWBxY',\n  '1 AM': 'uX2NxSN49Tg',\n  '2 AM': 'LAioanQMG_A',\n  '3 AM': '_pCBzrFnTlw',\n  '4 AM': 'eSfQrWXD94A',\n  '5 AM': 'zQLvrhUXwtE',\n}\n\nconst accfVideoIds: VideoIdRecord = {\n  '6 AM': 'z2QAAJeHF2s',\n  '7 AM': 'cQ2UTZ-S9Q8',\n  '8 AM': 'C7X6BLiB2Ec',\n  '9 AM': '3UpdJMSAP10',\n  '10 AM': 'CYk1CtYzz0o',\n  '11 AM': 'FTpvuY4Y1AE',\n  '12 PM': 'VhzGugcr_aQ',\n  '1 PM': '2bwO3lZkTHs',\n  '2 PM': 'FivBqy6VG4w',\n  '3 PM': '1Oya4xMfRfw',\n  '4 PM': 'K6KkeYwAFHE',\n  '5 PM': 'syxR6VzzAqQ',\n  '6 PM': 'yx_BIFCFpaA',\n  '7 PM': 'eGl1CzBxtRQ',\n  '8 PM': 'mFOLcD_w5sc',\n  '9 PM': 'Riz2ON11Vso',\n  '10 PM': 'lOdQfelEVaY',\n  '11 PM': 'ouBKNNeGbh8',\n  '12 AM': 'G3IzATmzA3o',\n  '1 AM': 'IUtCHa6RgMQ',\n  '2 AM': '9DwrEx-69PM',\n  '3 AM': 'lSqkG3QEsRw',\n  '4 AM': 'jSUBf13bKOU',\n  '5 AM': 'VBOBHSdoHL8',\n}\n\nexport enum VideoSet {\n  NewHorizons = 'acnh',\n  NewLeaf = 'acnl',\n  CityFolk = 'accf',\n}\n\nexport const videoIds: Record<VideoSet, VideoIdRecord> = {\n  [VideoSet.NewHorizons]: acnhVideoIds,\n  [VideoSet.NewLeaf]: acnlVideoIds,\n  [VideoSet.CityFolk]: accfVideoIds,\n}\n\nexport const hours = Object.keys(acnhVideoIds)\n\nexport const getCurrentHour = () => (new Date()).toLocaleString('en-US', { hour: 'numeric', hour12: true }) as HourType\n","import React from 'react'\nimport { Picker, Option } from '../Picker'\n\nexport enum Mode {\n  realtime = 'realtime',\n  choose = 'choose'\n}\n\ninterface ModePickerProps {\n  value: Mode\n  setValue: (mode: Mode) => void\n}\n\nconst ModePicker = ({ value, setValue }: ModePickerProps) => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value as Mode)\n\n  return (\n    <Picker>\n      <Option onChange={onChange} value={Mode.realtime} label=\"Realtime\" checked={Mode.realtime === value} />\n      <Option onChange={onChange} value={Mode.choose} label=\"Choose Track\" checked={Mode.choose === value} />\n    </Picker>\n  )\n}\n\nexport default ModePicker","import React from 'react'\nimport classes from './HourSelect.module.css'\nimport { hours, HourType } from '../../utils/hourly'\n\ninterface HourSelectProps {\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void\n  value: HourType\n  disabled: boolean\n}\n\nconst HourSelect = ({ onChange, value, disabled }: HourSelectProps) => (\n  <select className={classes.select} value={value} onChange={onChange} disabled={disabled}>\n    {hours.map(time => (\n      <option key={time} value={time}>{time}</option>\n    ))}\n  </select>\n)\n\nexport default HourSelect","import React from 'react'\nimport classes from './Picker.module.css'\n\nconst Picker: React.FC<{}> = ({ children }) => (\n  <fieldset className={classes.picker}>\n    {children}\n  </fieldset>\n)\n\nexport default Picker","import React, { ChangeEvent } from 'react'\nimport cx from 'classnames'\nimport classes from './Picker.module.css'\n\ninterface OptionProps {\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  checked: boolean\n  value: string\n  label: string\n}\n\nconst Option = ({ onChange, checked, value, label }: OptionProps) => (\n  <label className={cx(classes.option, { [classes.selected]: checked })}>\n    <input className={classes.radio} type=\"radio\" name=\"mode\" value={value} onChange={onChange} checked={checked} />\n    {` ${label}`}\n  </label>\n)\n\nexport default Option","import React from 'react'\nimport { Picker, Option } from '../Picker'\nimport { VideoSet } from '../../utils/hourly'\n\ninterface MusicPickerProps {\n  value: VideoSet\n  setValue: (value: VideoSet) => void\n}\n\nconst MusicPicker = ({ value, setValue }: MusicPickerProps) => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value as VideoSet)\n\n  return (\n    <Picker>\n      <Option onChange={onChange} value={VideoSet.CityFolk} label=\"City Folk\" checked={VideoSet.CityFolk === value} />\n      <Option onChange={onChange} value={VideoSet.NewLeaf} label=\"New Leaf\" checked={VideoSet.NewLeaf === value} />\n      <Option onChange={onChange} value={VideoSet.NewHorizons} label=\"New Horizons\" checked={VideoSet.NewHorizons === value} />\n    </Picker>\n  )\n}\n\nexport default MusicPicker","import React from 'react'\nimport classes from './PlayButton.module.css'\n\ninterface PlayButtonProps {\n  onClick: () => void,\n  paused: boolean\n}\n\nconst PlayButton = ({ onClick, paused }: PlayButtonProps) => (\n  <button onClick={onClick} className={classes.button} aria-label={paused ? 'Play' : 'Pause'}>\n    {paused ? (\n      <svg className={classes.icon} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg>\n      ) : (\n      <svg className={classes.icon} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"></path></svg>\n    )}\n  </button>\n)\n\nexport default PlayButton\n","import React from 'react'\nimport { HourSelect } from '../HourSelect'\nimport { PlayButton } from '../PlayButton'\nimport { Mode } from '../ModePicker'\nimport classes from './PlayBar.module.css'\nimport { HourType } from '../../utils/hourly'\n\ninterface PlayBarProps {\n  hour: HourType\n  mode: Mode\n  onPlayClick: () => void\n  setHour: (hour: HourType) => void\n  paused: boolean\n}\n\nconst PlayBar = ({ hour, mode, onPlayClick, setHour, paused }: PlayBarProps) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => setHour(event.target.value as HourType)\n\n  return (\n    <div className={classes.playbar}>\n      <p>\n        Now Playing:\n        {' '}\n        <HourSelect value={hour} onChange={handleChange} disabled={mode === Mode.realtime} />\n      </p>\n      <PlayButton onClick={onPlayClick} paused={paused} />\n    </div>\n  )\n}\n\nexport default PlayBar\n","import React, { useState, useEffect } from 'react'\nimport YouTube from 'react-youtube'\nimport { YouTubePlayer } from 'youtube-player/dist/types'\nimport classes from './Player.module.css'\n\ntype PlayerEvent = {\n  target: YouTubePlayer\n  data: number\n}\n\ninterface PlayerProps {\n  videoId: string\n  appPaused: boolean\n  playerPaused: boolean\n  setPlayerPaused: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst Player = ({ videoId, appPaused, playerPaused, setPlayerPaused }: PlayerProps) => {\n  const [video, setVideo] = useState<YouTubePlayer>()\n\n  useEffect(() => {\n    if (video) {\n      if (appPaused) {\n        video.pauseVideo()\n      } else {\n        video.playVideo()\n      }\n    }\n  }, [appPaused, video])\n\n  const _onReady = (event: PlayerEvent): void => {\n    setVideo(() => event.target)\n  }\n\n  const _onEnd = (event: PlayerEvent): void => event.target.playVideo()\n\n  const _onStateChange = (event: PlayerEvent): void => {\n    if (event.data === YouTube.PlayerState.UNSTARTED) {\n      if (appPaused && !playerPaused) {\n        event.target.pauseVideo()\n      } else if (!appPaused && playerPaused) {\n        event.target.playVideo()\n      }\n    } else if (event.data === YouTube.PlayerState.PAUSED) {\n      setPlayerPaused(() => true)\n    } else if (event.data === YouTube.PlayerState.PLAYING) {\n      setPlayerPaused(() => false)\n    }\n  }\n\n  return (\n    <div className={classes.player}>\n      <YouTube\n        videoId={videoId}\n        onReady={_onReady}\n        onEnd={_onEnd}\n        onStateChange={_onStateChange}\n      />\n    </div>\n  )\n}\n\nexport default Player","import React, { useState, useEffect } from 'react'\nimport  createPersistedState from 'use-persisted-state'\nimport DocumentTitle from 'react-document-title'\nimport { PlayBar, ModePicker, Mode, Player, MusicPicker } from '../../components'\nimport { videoIds, getCurrentHour, VideoSet, HourType } from '../../utils/hourly'\nimport classes from './Main.module.css'\n\nconst useHourState = createPersistedState('hour')\nconst useModeState = createPersistedState('mode')\nconst useVideoSetState = createPersistedState('videoSet')\n\nconst Main = () => {\n  // Represents the app's paused state\n  const [appPaused, setAppPaused] = useState<boolean>(true)\n  // Represents the Youtube player's paused state, which can be triggered outside of the app (e.g. Apple touch bar)\n  const [playerPaused, setPlayerPaused] = useState<boolean>(true)\n  const [hour, setHour] = useHourState<HourType>('6 AM')\n  const [mode, setMode] = useModeState<Mode>(Mode.realtime)\n  const [videoSet, setVideoSet] = useVideoSetState<VideoSet>(VideoSet.NewHorizons)\n\n  useEffect(() => {\n    const setRealtimeHour = () => {\n      if (mode === Mode.realtime) {\n        setHour(getCurrentHour())\n      }\n    }\n\n    setRealtimeHour()\n\n    const intervalId = setInterval(setRealtimeHour, 1000); // Recheck every second\n\n    return () => clearInterval(intervalId);\n  }, [setHour, mode]);\n\n  const onPlayClick = () => setAppPaused(prev => !prev)\n\n  return (\n    <DocumentTitle title={`${hour} - Animal Crossing Radio`}>\n      <>\n        <h1 className={classes.title}>\n          Animal Crossing Radio\n        </h1>\n        <div className={classes.controls}>\n          <MusicPicker value={videoSet} setValue={setVideoSet} />\n          <ModePicker value={mode} setValue={setMode} />\n        </div>\n        <main className={classes.main}>\n          <PlayBar hour={hour} mode={mode} onPlayClick={onPlayClick} setHour={setHour} paused={playerPaused} />\n          <Player\n            videoId={videoIds[videoSet][hour]}\n            appPaused={appPaused}\n            playerPaused={playerPaused}\n            setPlayerPaused={setPlayerPaused}\n          />\n        </main>\n      </>\n    </DocumentTitle>\n  );\n}\n\nexport default Main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Main } from './containers/Main'\nimport './base.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PlayButton_button__3E_or\",\"icon\":\"PlayButton_icon__u3ocl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Main_controls__t8UiW\",\"main\":\"Main_main__nGgD9\",\"title\":\"Main_title__28x4D\"};"],"sourceRoot":""}